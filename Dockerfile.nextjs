# Use Ubuntu as the base image
FROM ubuntu:22.04

# Set working directory in the container
WORKDIR /app

# Install Node.js and other dependencies (including Nginx for serving static files)
RUN apt-get update && apt-get install -y \
    curl \
    nginx \
    && apt-get clean

# Install a specific version of Node.js (e.g., v16.x)
RUN curl -fsSL https://deb.nodesource.com/setup_22.x | bash - && \
    apt-get install -y nodejs

# Install a specific version of npm (e.g., npm v8.x)
RUN npm install -g npm@10

# Verify Node.js and npm versions (optional, for debugging)
RUN node -v
RUN npm -v

# Copy package.json and package-lock.json (or yarn.lock) first to take advantage of Docker's cache
COPY voice-chatbot/package.json voice-chatbot/package-lock.json ./

# Install dependencies inside the container
RUN npm install --force

# Copy the rest of the Next.js app files (including next.config.js)
COPY ./voice-chatbot .

# Run `npm run build` inside the container (which uses the next.config.js to set output to 'export')
RUN npm run build

# Rename 'out' to 'build' for consistency (if necessary)
RUN mv out build

RUN chown -R www-data:www-data build
RUN chmod -R 755 build



# Configure Nginx to serve static files
COPY ./nginx/default.conf /etc/nginx/conf.d/default.conf

# Expose port for Nginx to serve the app
EXPOSE 80

# Set the entrypoint to Nginx to serve static files
CMD ["nginx", "-g", "daemon off;"]

